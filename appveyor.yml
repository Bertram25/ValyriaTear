###################################
#   ValyriaTear                   #
#                                 #
#   AppVeyor build configuration  #
###################################

version: '{branch}-{build}'

pull_requests:
  do_not_increment_build_number: true

image: Visual Studio 2013
clone_depth: 1

build:
  verbosity: minimal

environment:
  appveyor_build_worker_cloud: gce

init:
  - cmd: "IF \"%PLATFORM%\" == \"x86\" (set MINGWPATH=C:\\msys64\\mingw32\\bin& set MINGW_PACKAGE_PREFIX=mingw-w64-i686) ELSE (set MINGWPATH=C:\\msys64\\mingw64\\bin& set MINGW_PACKAGE_PREFIX=mingw-w64-x86_64)"
  - cmd: "set INSTALLER_FILENAME=valyriatear-%APPVEYOR_BUILD_VERSION%-%CONFIGURATION%-%PLATFORM%.exe"

install:
  # Install NSIS
  - choco install nsis
  # Paths to MinGW/MSys2 environment + NSIS
  - cmd: "set PATH=%MINGWPATH%;C:\\Program Files (x86)\\NSIS;C:\\msys64\\usr\\bin;%PATH%"
  # Set up compiler
  - cmd: "set CC=%MINGWPATH%\\gcc.exe"
  - cmd: "set CXX=%MINGWPATH%\\g++.exe"
  # Update mirrors
  - cmd: "bash --login -c \"pacman --noconfirm --sync pacman pacman-mirrors\""
  # Update msys2 system (twice, first run does system packages)
  - cmd: "bash --login -c \"pacman -Su --noconfirm\""
  - cmd: "bash --login -c \"pacman -Su --noconfirm\""
  # Installed required libs
  - cmd: "bash --login -c \"pacman --noconfirm -S %MINGW_PACKAGE_PREFIX%-cmake %MINGW_PACKAGE_PREFIX%-ninja %MINGW_PACKAGE_PREFIX%-boost %MINGW_PACKAGE_PREFIX%-SDL2_ttf %MINGW_PACKAGE_PREFIX%-SDL2_image %MINGW_PACKAGE_PREFIX%-glew %MINGW_PACKAGE_PREFIX%-libpng %MINGW_PACKAGE_PREFIX%-libzip %MINGW_PACKAGE_PREFIX%-lua %MINGW_PACKAGE_PREFIX%-libogg %MINGW_PACKAGE_PREFIX%-libvorbis %MINGW_PACKAGE_PREFIX%-openal %MINGW_PACKAGE_PREFIX%-iconv %MINGW_PACKAGE_PREFIX%-libiconv\""
  # Get the submodules
  - cmd: git submodule update --init --recursive

build_script:
  - cmd: cd %APPVEYOR_BUILD_FOLDER%
  # Configure
  - cmd: "IF \"%configuration%\" == \"Debug\" (cmake -G \"Ninja\" -DDEBUG_FEATURES=on .) ELSE (cmake -G \"Ninja\" .)"
  # Compile
  - cmd: ninja

on_success:
 # Create installer
 - cmd: strip -sv %APPVEYOR_BUILD_FOLDER%\src\valyriatear.exe
 - cmd: "makensis.exe /X\"SetCompressor /FINAL lzma\" /DDLL_DIR=\"%MINGWPATH%\" /DINSTALLER_FILENAME=\"%INSTALLER_FILENAME%\"  ValyriaTear.nsi"
 - appveyor PushArtifact %APPVEYOR_BUILD_FOLDER%\%INSTALLER_FILENAME%

artifacts:
    - path: $(INSTALLER_FILENAME)
      name: ValyriaTear Setup

platform:
  - x64
  - x86

configuration:
  - Release
  - Debug
